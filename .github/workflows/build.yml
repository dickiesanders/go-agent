name: Build and Release for Multiple Platforms

on:
  push:
    branches:
      - main
    # tags:
    #   - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Go Project for Multiple Platforms
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, linux, darwin]
        arch: [amd64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.23

      - name: Build
        run: |
          echo "Building for OS: ${{ matrix.os }}, Arch: ${{ matrix.arch }}"
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} CGO_CFLAGS="-Wno-deprecated-declarations" go build -o go-agent-${{ matrix.os }}-${{ matrix.arch }} cmd/main.go

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: go-agent-${{ matrix.os }}-${{ matrix.arch }}
          path: go-agent-${{ matrix.os }}-${{ matrix.arch }}

  release:
    name: Create Release with Binaries
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./ # Downloads all artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            go-agent-windows-amd64
            go-agent-linux-amd64
            go-agent-darwin-amd64
            go-agent-windows-arm64
            go-agent-linux-arm64
            go-agent-darwin-arm64
          draft: false # Set to true if you want to create the release as a draft first
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
